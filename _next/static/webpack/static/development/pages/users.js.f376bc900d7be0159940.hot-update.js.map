{"version":3,"file":"static/webpack/static\\development\\pages\\users.js.f376bc900d7be0159940.hot-update.js","sources":["webpack:///./components/ProfileForm.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { useIdentity } from \"../hooks/identity\"\r\nimport s from \"../style/form.module.sass\"\r\nimport { Modal } from \"./layout/Modal\";\r\nimport { DropdownItem } from \"./MultilevelMenu\";\r\nimport { MdSettings as SettingsIcon} from \"react-icons/md\";\r\n\r\nexport function ProfileForm(props) {\r\n    const [id, axios] = useIdentity();\r\n    const [u, setU] = useState({});\r\n    const [changes, setChanges] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(id.active!== null) update();\r\n    }, [id]);\r\n    function update() {\r\n        axios.get(\"/user/me\").then((res) => {\r\n            setU(res.data);\r\n        }).catch();\r\n    }\r\n    function onChange(evt) {\r\n        var {name, value} = evt.target;\r\n        setChanges((prev)=> {\r\n            var lol = {...prev};\r\n            lol[name] = value;\r\n            if(!value)\r\n                delete lol[name];\r\n            return lol;\r\n        })\r\n    }\r\n    async function onSubmit(evt) {\r\n        evt.preventDefault();\r\n        setLoading(true);\r\n        try {\r\n            var res = await axios.put(\"/user/me\", changes);\r\n            setLoading(false);\r\n            reset();\r\n            update();\r\n        } catch {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    function reset(evt) {\r\n        setChanges({});\r\n        if(evt) evt.preventDefault();\r\n    }\r\n\r\n    return <form className={s.form} onSubmit={onSubmit}>\r\n        <label> Username:\r\n            <div style={{display: \"flex\"}}>@<input \r\n                type=\"text\"\r\n                style={{flexGrow:1}} \r\n                placeholder={u.username||\"\"}\r\n                onChange={onChange}\r\n                value={changes.username||\"\"}\r\n                name=\"username\"\r\n                disabled={loading}\r\n            ></input></div>\r\n        </label>\r\n        <label> Clear Name:\r\n            <input type=\"text\" \r\n                name=\"clearname\" \r\n                placeholder={u.clearname||u.username||\"\"}\r\n                onChange={onChange}\r\n                value={changes.clearname||\"\"}\r\n                disabled={loading}\r\n            ></input>\r\n        </label>\r\n        <label> AvatarUrl:\r\n            <input type=\"text\"  \r\n                name=\"avatarUrl\" \r\n                placeholder={u.avatarUrl||\"(none)\"}\r\n                onChange={onChange}\r\n                value={changes.avatarUrl||\"\"}\r\n                disabled={loading}\r\n            ></input>\r\n        </label>\r\n        <label>Description:\r\n            <textarea \r\n                name=\"description\" \r\n                placeholder={u.description||\"(none)\"}\r\n                rows=\"4\" \r\n                autoComplete=\"off\"\r\n                onChange={onChange}\r\n                value={changes.description||\"\"}\r\n                disabled={loading}\r\n            ></textarea>\r\n        </label>\r\n        <button onClick={reset} disabled={loading}>Reset</button>\r\n        <div className={s.submitButton} style={{zIndex:1}}><button disabled={loading}>Save</button></div>\r\n    </form>\r\n}\r\n\r\nexport function AccountSettingsButton(props) {\r\n    const modalRef = useRef();\r\n\r\n    return <>\r\n        <DropdownItem leftIcon={<SettingsIcon/>} text=\"Account Settings\" onClick={() => {\r\n            modalRef.current.toggleModal();\r\n        }}/>\r\n        <Modal ref={modalRef} className={s.accountFormWrap}>\r\n            <ProfileForm></ProfileForm>\r\n        </Modal>\r\n    </>\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}