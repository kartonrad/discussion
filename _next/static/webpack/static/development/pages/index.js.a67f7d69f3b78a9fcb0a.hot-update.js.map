{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a67f7d69f3b78a9fcb0a.hot-update.js","sources":["webpack:///./components/Post.js"],"sourcesContent":["import { useState, useRef, useEffect, useContext } from \"react\";\r\n\r\nimport CommentIcon from \"../res/svg/commentIcon.svg\"\r\nimport { Vote } from \"./Vote\";\r\nimport { Timestamp } from \"./Timestamp\"\r\n\r\nimport s from \"../style/post.module.sass\";\r\n\r\nimport { CommentSection } from \"./CommentSection\";\r\nimport { DropdownItem } from '../components/MultilevelMenu';\r\n\r\n//markdown styling\r\nimport mdStyle from \"../style/document.module.sass\";\r\nimport markdown from \"../helpers/markdown\";\r\nconst md = markdown({ anchor: false, embeds: true, supressHeadings: true });\r\n\r\nimport { MenuData } from \"./layout/ContextMenu\";\r\nimport { useIdentity } from \"../hooks/identity\";\r\n\r\nimport { FaBan, FaLock, FaLockOpen, FaEye, FaEyeSlash, FaCommentDots, FaCopy } from \"react-icons/fa\";\r\nimport { HiOutlineClipboardCopy, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { ImEmbed } from \"react-icons/im\";\r\nimport { MdEdit } from \"react-icons/md\";\r\nimport { ConfirmMenuItem } from \"./ConfirmMenuItem\";\r\nimport { PostForm } from \"./PostForm\";\r\nimport { apiUrl } from \"../constants\";\r\nimport { FallbackImg } from \"./FallbackImg\";\r\nimport {DialogBox, Modal} from \"./layout/Modal\"\r\nimport {getRandom} from \"../constants/randomText\";\r\n\r\nconsole.log(s.postScronch)\r\n\r\nexport const Post = (props) => {\r\n    var p = props.post;\r\n    var [commentsOpen, setCommentsOpen] = useState(false);\r\n    \r\n\r\n    var [deletion, setDeletion] = useState(false);\r\n    var delRef = useRef();\r\n    var [highlighted, setHightlighted] = useState(false);\r\n\r\n    //----show a context menu on rightclick\r\n    var contextMenu = useContext(MenuData);\r\n    var [id, axios] = useIdentity();\r\n    var embed = props.embed;\r\n\r\n    var [editing, setEditing] = useState(false);\r\n\r\n    var [comState, setComState] = useState(p.entity.comments_hidden ? \"hidden\" : p.entity.comments_locked ? \"locked\" : undefined);\r\n    useEffect(() => {\r\n        if (p.entity.comments_hidden) {\r\n            setComState(\"hidden\");\r\n        } else if (p.entity.comments_locked) {\r\n            setComState(\"locked\");\r\n        } else {\r\n            setComState(\"e\");\r\n        }\r\n    }, [p.entity.comments_locked, p.entity.comments_hidden])\r\n\r\n    switch (comState) {\r\n        case \"locked\": \r\n            p.entity.comments_hidden = false; \r\n            p.entity.comments_locked = true; \r\n        break;\r\n        case \"hidden\":  \r\n            p.entity.comments_hidden = true; \r\n        break;\r\n        default: \r\n            p.entity.comments_hidden = false; \r\n            p.entity.comments_locked = false;\r\n    }\r\n\r\n    const postRef = useRef();\r\n\r\n    if(props.rerender === p.entity.id) {\r\n        scrollFetch();\r\n    }\r\n\r\n    function context(evt) {\r\n        if (deletion || editing) return false\r\n        evt.preventDefault();\r\n\r\n\r\n        var menu = [\r\n            <ConfirmMenuItem text=\"Embed\" leftIcon={<ImEmbed />} onClick={async () => {\r\n                try {\r\n                    await navigator.clipboard.writeText(`<iframe src=\"https://drkslv.github.io/discussion/embed/post?id=${p.entity.id}\" width=\"700px\" height=\"500px\" frameborder=\"0\"></iframe>`)\r\n                    return true;\r\n                } catch (error) {\r\n                    return false;\r\n                }\r\n            }} />,\r\n            <ConfirmMenuItem text=\"Copy markdown\" leftIcon={<FaCopy/>} onClick={async () => {\r\n                try {\r\n                    await navigator.clipboard.writeText(p.text)\r\n                    return true;\r\n                } catch (error) {\r\n                    return false;\r\n                }\r\n            }} />\r\n        ]\r\n        if (typeof id.active !== \"number\" || !id.users[id.active])\r\n            return contextMenu.openMenu(evt.pageX, evt.pageY, menu);\r\n\r\n        if (p.author && id.users[id.active].username === p.author.username)\r\n            menu.push(\r\n                <DropdownItem text=\"Edit\" onClick={edit} leftIcon={<MdEdit />} />);\r\n        if ((p.author && id.users[id.active].username === p.author.username) || id.users[id.active].moderator)\r\n            menu.push(<DropdownItem text=\"Delete\" onClick={deleteModal} warn={true} leftIcon={<FaBan />} />);\r\n        if (id.users[id.active].moderator) {\r\n            var l = p.entity.comments_locked;\r\n            var h = p.entity.comments_hidden;\r\n            menu.push(\r\n                <DropdownItem text=\"Comments\" warn={true} leftIcon={<FaCommentDots />}>\r\n                    <DropdownItem text={!l ? \"Lock\" : \"Unlock\"} leftIcon={!l ? <FaLock /> : <FaLockOpen />} warn={true} onClick={() => entity(!l)} />\r\n                    <DropdownItem text={!h ? \"Hide\" : \"Show\"} leftIcon={!h ? <FaEyeSlash /> : <FaEye />} warn={true} onClick={() => entity(undefined, !h)} />\r\n                </DropdownItem>\r\n            )\r\n        }\r\n\r\n        contextMenu.openMenu(evt.pageX, evt.pageY, menu);\r\n\r\n    }\r\n\r\n    async function entity(lock, hide) {\r\n        axios.put(`/entity/${p.entity.id}`, {\r\n            comments_locked: typeof lock === \"boolean\" ? String(lock) : undefined,\r\n            comments_hidden: typeof hide === \"boolean\" ? String(hide) : undefined\r\n        }).then((res) => {\r\n            contextMenu.removeMenu();\r\n            setCommentsOpen(false);\r\n\r\n            if (res.data.comments_hidden === true) {\r\n                setComState(\"hidden\");\r\n            } else if (res.data.comments_locked === true) {\r\n                setComState(\"locked\");\r\n            } else {\r\n                setComState(\"e\");\r\n            }\r\n        });\r\n    }\r\n\r\n    async function edit() {\r\n        console.log(\"edit post\");\r\n\r\n        contextMenu.removeMenu()\r\n        setEditing(true);\r\n        scrollFetch();\r\n    }\r\n\r\n    async function deleteP() {\r\n        setHightlighted(false);\r\n        axios.delete(`/post/${p.entity.id}`).then(async () => {\r\n            console.log(\"scronch post\");\r\n\r\n            contextMenu.removeMenu()\r\n            setCommentsOpen(false);\r\n            setDeletion(true);\r\n            scrollFetch();\r\n            await later(2000);\r\n            props.rerenderFunc();\r\n        }).catch(() => {\r\n            contextMenu.removeMenu()\r\n        });\r\n    }\r\n\r\n    function scrollFetch() {\r\n        var bodyRect = document.body.getBoundingClientRect(),\r\n            elemRect = postRef.current.getBoundingClientRect(),\r\n            offset = elemRect.top - bodyRect.top;\r\n\r\n        if (postRef.current.clientHeight > 350 && commentsOpen && offset < window.scrollY && !embed) {\r\n            postRef.current.scrollIntoView();\r\n            window.scrollBy(0, -120);\r\n        }\r\n    }\r\n\r\n    async function onEdit(text, cancel) {\r\n        if (cancel) return setEditing(false);\r\n\r\n        try {\r\n            var res = axios.put(`/post/${p.entity.id}`, { text });\r\n        } catch (error) {\r\n            return false\r\n        }\r\n        setEditing(false);\r\n        props.rerenderFunc(p.entity.id);\r\n        return true;\r\n    }\r\n\r\n    function deleteModal() {\r\n        setHightlighted(true);\r\n        delRef.current.toggleModal();\r\n    }\r\n    function deleteCancel() {\r\n        setHightlighted(false);\r\n    }\r\n\r\n    //----Expand when clicked\r\n\r\n    return (\r\n        <><DialogBox onConfirm={deleteP} onCancel={deleteCancel} ref={delRef} text={\"Delete this post?\"}></DialogBox>\r\n        <div style={{zIndex:highlighted?6:undefined}}\r\n        className={`${s.postWrapper} ${deletion && !(commentsOpen) && s.postScronch}`}>\r\n            \r\n            <div className={`${s.post}`}\r\n                ref={postRef}\r\n                onClick={() => {\r\n                    if (p.entity.comments_hidden) {\r\n                        postRef.current.classList.remove(s.wrong)\r\n                        void postRef.current.offsetWidth;\r\n                        postRef.current.classList.add(s.wrong)\r\n                    }\r\n                    if (!deletion && !editing) setCommentsOpen(!commentsOpen);\r\n                    if (!editing) scrollFetch();\r\n                }}\r\n                onContextMenu={context}\r\n                data-expanded={commentsOpen}\r\n            >\r\n                {!editing ? (<PostContent post={p} expanded={commentsOpen}/>)\r\n                    : (<PostForm title={p.title} text={p.text} edit onEdit={onEdit} />)\r\n                }\r\n            </div>\r\n            {!p.entity.comments_hidden ? <CommentSection id={p.entity.id} open={commentsOpen} key={\"cs\" + p.entity.id} entity={p.entity} /> : <></>}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport function PostContent({post: p, expanded}) {\r\n    // determine avatar\r\n    var avatar; var text = p.text; \r\n    if (p.author) {\r\n        avatar = p.author.avatarUrl;\r\n    } else {\r\n        if (p.text === \"~d~\") {\r\n            avatar=apiUrl+\"/assets/img/trash.jpg\";\r\n            text = getRandom(\"post deleted\")\r\n        } else if (p.text === \"~r~\") {\r\n            avatar=apiUrl+\"/assets/img/nuke.jpg\"\r\n            text = getRandom(\"post removed\")\r\n        } else {\r\n            avatar=apiUrl+\"/assets/img/kill.png\"\r\n        }\r\n    }\r\n\r\n    var smR = window.screen.width<600;\r\n\r\n    // determine vote\r\n    var myVote = null;\r\n    var votes = p.entity.votes;\r\n    if (votes && votes[0])\r\n        myVote = votes[0].positive;\r\n\r\n    // determine time it takes to expand\r\n    const bodyRef = useRef();\r\n    var expandTime;\r\n    if (bodyRef.current) {\r\n        expandTime = 0.71428571429 * bodyRef.current.clientHeight - 350;\r\n    }\r\n\r\n    var [collapsed, setCollapsed] = useState(false);\r\n    useEffect(() => {\r\n        setCollapsed(!expanded && bodyRef.current.clientHeight > 350);\r\n    }, [bodyRef, expanded])\r\n    useEffect(() => {\r\n        bodyRef.current.querySelectorAll(\"img\").forEach((elm) => {elm.addEventListener(\"click\", (ev) => {\r\n            ev.stopPropagation();\r\n        })})\r\n    }, [bodyRef, p.text])\r\n\r\n    return (<>\r\n        <div>\r\n            <div className={s.pic}>\r\n                <FallbackImg src={avatar}></FallbackImg>\r\n            </div>\r\n            <Vote up={p.entity.upvotes} down={p.entity.downvotes} id={p.entity.id} my={myVote}></Vote>\r\n        </div>\r\n        <div className={s.content}>\r\n            <div>\r\n                <div className={s.head}>\r\n                    \r\n\r\n                    <div\r\n                        className={s.comments}\r\n                        data-state={p.entity.comments_hidden ? \"hidden\" : p.entity.comments_locked ? \"locked\" : undefined}\r\n                    >\r\n                        {!p.entity.comments_hidden ?\r\n                            <>{(p.entity.comment.rgt - p.entity.comment.lft - 1) / 2} ‧ {p.entity.comments_locked ? <> {smR?<FaLock size={15}/>:(<b>LOCKED</b>)}</> : <></>}</>\r\n                            :\r\n                            (smR?<FaEyeSlash size={20}/>:(<b>Closed.</b>))\r\n                        }\r\n                        <CommentIcon />\r\n                    </div>\r\n\r\n                    <p className={s.title}>\r\n                        <b>{p.title}</b><br />\r\n                        <span className={s.author}>posted by {p.author ? p.author.username : \"❌DELETED❌\"}</span>\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={s.body} style={{ maxHeight: !expanded ? \"350px\" : bodyRef.current.clientHeight + 10, \"--expandtime\": expandTime + \"ms\", overflow: \"hidden\" }}>\r\n                <div dangerouslySetInnerHTML={{ __html: md(text) }} className={mdStyle.mdPost} ref={bodyRef}></div>\r\n                {collapsed && <div className={s.expandDialogWrapper}><div className={s.expandDialog}>Click to Expand</div></div>}\r\n            </div>\r\n\r\n            <Timestamp time={p.createdAt} edit={p.updatedAt}></Timestamp>\r\n        </div></>);\r\n}\r\n\r\n\r\nfunction later(delay) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, delay);\r\n    });\r\n}\r\nfunction checkVisible(elm) {\r\n    var rect = elm.getBoundingClientRect();\r\n    var viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\r\n    return !(rect.bottom < 0 || rect.top - viewHeight >= 0);\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAVA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AANA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAecA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}